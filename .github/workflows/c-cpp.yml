name: C Honeypot CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Debug directory structure (optional for troubleshooting)
      - name: Debug directory structure
        run: ls -R

      # Step 3: Set up build tools depending on the OS
      - name: Set up build tools
        run: |
          if [[ $RUNNER_OS == "Linux" ]]; then
            sudo apt-get update && sudo apt-get install -y gcc make
          elif [[ $RUNNER_OS == "Windows" ]]; then
            choco install mingw
          fi

      # Step 4: Compile the C honeypot code
      - name: Compile C honeypot
        run: |
          if [[ $RUNNER_OS == "Linux" ]]; then
            cd .SOURCE
            gcc -o ../.RUN/honeypot HONEYPOT.c
          elif [[ $RUNNER_OS == "Windows" ]]; then
            cd .SOURCE
            mingw32-gcc -o ../.RUN/honeypot.exe HONEYPOT.c
          fi

      # Step 5: Run the compiled honeypot for testing
      - name: Run the compiled honeypot
        run: |
          if [[ $RUNNER_OS == "Linux" ]]; then
            cd .RUN
            chmod +x honeypot
            ./honeypot
          elif [[ $RUNNER_OS == "Windows" ]]; then
            cd .RUN
            .\honeypot.exe
          fi
        continue-on-error: true

      # Step 6: Display running honeypot process
      - name: Display running honeypot process
        run: |
          if [[ $RUNNER_OS == "Linux" ]]; then
            ps aux | grep honeypot
          elif [[ $RUNNER_OS == "Windows" ]]; then
            tasklist | findstr honeypot
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Deploy the compiled honeypot
      - name: Deploy to remote server
        run: |
          cd .RUN
          scp honeypot user@remote-server:/path/to/deploy/
          ssh user@remote-server "nohup /path/to/deploy/honeypot &"
